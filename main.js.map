{"version":3,"sources":["./src/app/components/create-notice/create-notice.component.ts","./src/app/components/create-notice/create-notice.component.html","./src/app/shared/_models/Login.ts","./src/environments/environment.ts","./src/app/_services/notice.info.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/_services/user.service.ts","./src/app/shared/_models/Notice.ts","./src/app/app.module.ts","./src/app/components/google/google.component.ts","./src/app/components/google/google.component.html","./src/app/shared/_models/Register.ts","./src/app/_helpers/snackbar.helper.ts","./src/app/_services/notice.service.ts","./src/app/shared/_models/User.ts","./src/app/_helpers/auth.guard.ts","./src/app/_services/authentication.service.ts","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/full-information/full-information.component.ts","./src/app/components/full-information/full-information.component.html","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/shared/_models/ResponseNotice.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {Notice} from '../../shared/_models/Notice';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {NoticeService} from '../../_services/notice.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-notice.component.html',\n  styleUrls: ['./create-notice.component.scss']\n})\nexport class CreateNoticeComponent {\n  @ViewChild('fileInput') fileInput: ElementRef;\n  fileAttr = 'Choose File';\n\n  noticeModel = new Notice(\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '');\n\n  constructor(private authenticationService: AuthenticationService,\n              private noticeService: NoticeService,\n              private router: Router) {\n  }\n\n  storeNotice(): void {\n    localStorage.getItem('token');\n    this.noticeService.storeNotice(this.noticeModel).subscribe(\n      res => {\n        console.log(res);\n        console.log('poszło');\n      }\n    );\n  }\n\n  // tslint:disable-next-line:typedef\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      Array.from(imgFile.target.files).forEach((file: File) => {\n        this.fileAttr += file.name + ' - ';\n      });\n\n      // HTML5 FileReader API\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        const image = new Image();\n        image.src = e.target.result;\n        image.onload = rs => {\n          const imgBase64Path = e.target.result;\n        };\n      };\n      reader.readAsDataURL(imgFile.target.files[0]);\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = '';\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n\n  logOut(): void {\n    this.authenticationService.logOut();\n    this.router.navigate(['h']);\n  }\n\n  toAllNotices(): void {\n    this.router.navigate(['profile']);\n  }\n}\n","<mat-toolbar>\n  <span>Notice My Car</span>\n  <span class=\"spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"toAllNotices()\">Wszystkie</button></span>\n  <span class=\"small-spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"logOut()\">Wyloguj się</button></span>\n</mat-toolbar>\n<body class=\"mat-app-background\" fxLayoutAlign=\"center center\">\n<div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"center center\" fxFlex=\"70\">\n  <h2>Dodaj ogłoszenie! </h2>\n  <div fxLayout=\"row\" fxLayoutAlign=\"left wrap\">\n    <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"left center\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tytuł ogłoszenia</mat-label>\n        <input required matInput [(ngModel)]=\"noticeModel.title\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Dodatkowe informacje</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.message\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Marka</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.mark\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"padding-fix\">\n        <mat-label>Model</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.model\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Kolor pojazdu</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.color\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Typ Nadwozia</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.body\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Przebieg</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.mileage\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Rocznik</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.year\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"padding-fix\">\n        <mat-label>Cena</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.price\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field>\n        <div>\n          <mat-toolbar>\n            <input matInput [(ngModel)]=\"fileAttr\" readonly name=\"name\" />\n            <button mat-raised-button color=\"primary\">\n              Zdjęcie\n            </button>\n          </mat-toolbar>\n          <input type=\"file\"\n                 #fileInput id=\"uploadFile\"\n                 (change)=\"uploadFileEvt($event)\"\n                 name=\"uploadFile\"\n                 multiple=\"multiple\"\n                 accept=\"image/*\" />\n        </div>\n      </mat-form-field>\n      <div fxLayoutGap=\"10%\" fxLayout=\"column\">\n        <button fxFill mat-raised-button (click)=\"storeNotice()\" type=\"submit\">Wyślij ogłoszenie</button>\n      </div>\n    </div>\n  </div>\n</div>\n</body>\n\n  <!--<div fxLayout=\"row\" fxLayoutGap=\"5%\">\n    <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"left center\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tytuł ogłoszenia</mat-label>\n        <input required matInput [(ngModel)]=\"noticeModel.title\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Dodatkowe informacje</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.content\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Marka</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.mark\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"padding-fix\">\n        <mat-label>Model</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.model\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" >\n        <mat-label>Kolor pojazdu</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.color\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <div fxLayoutGap=\"10%\" fxLayout=\"column\">\n        <button fxFill mat-raised-button (click)=\"storeNotice()\" type=\"submit\">Wyślij ogłoszenie</button>\n      </div>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"right center\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Typ Nadwozia</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.body\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Przebieg</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.mileage\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Rocznik</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.year\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" class=\"padding-fix\">\n        <mat-label>Cena</mat-label>\n        <input matInput [(ngModel)]=\"noticeModel.price\">\n        <button matSuffix mat-icon-button disabled></button>\n      </mat-form-field>\n      <mat-form-field>\n        <div>\n          <mat-toolbar>\n            <input matInput [(ngModel)]=\"fileAttr\" readonly name=\"name\" />\n            <button mat-raised-button color=\"primary\">\n              Zdjęcie\n            </button>\n          </mat-toolbar>\n          <input type=\"file\"\n                 #fileInput id=\"uploadFile\"\n                 (change)=\"uploadFileEvt($event)\"\n                 name=\"uploadFile\"\n                 multiple=\"multiple\"\n                 accept=\"image/*\" />\n        </div>\n      </mat-form-field>\n      <div fxLayoutGap=\"10%\" fxLayout=\"column\" >\n        <button mat-raised-button (click)=\"close()\">Wróć</button>\n      </div>\n    </div>\n  </div>-->\n\n\n","export class Login{\r\n  email: string;\r\n  password: string;\r\n  constructor(email, password) {\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {BehaviorSubject} from 'rxjs';\r\nimport {ResponseNotice} from '../shared/_models/ResponseNotice';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class NoticeInfoService {\r\n  private notice = new ResponseNotice('', '', '', '', '', '', '', '', '', '', '', [], '', '');\r\n  private noticeSource = new BehaviorSubject(this.notice);\r\n  currentNotice = this.noticeSource.asObservable();\r\n\r\n  changeNotice(newNotice: ResponseNotice): void {\r\n    this.noticeSource.next(newNotice);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public router: Router) {\r\n  }\r\n\r\n  openSignIn(): void {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  openSignUp(): void {\r\n    this.router.navigate(['register']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<mat-toolbar>\r\n  <span>Notice My Car</span>\r\n  <span class=\"spacer\"></span>\r\n  <span><button mat-raised-button color=\"accent\" (click)=\"openSignIn()\">Zaloguj się</button></span>\r\n  <span class=\"small-spacer\"></span>\r\n  <span><button mat-raised-button color=\"accent\" (click)=\"openSignUp()\">Zarejestruj się</button></span>\r\n</mat-toolbar>\r\n\r\n<body class=\"mat-app-background\" fxLayoutAlign=\"center center\">\r\n\r\n<div fxLayoutAlign=\"center center\" fxLayout=\"column\">\r\n  <img class=\"title\" src=\"assets/Logo2.png\" alt=\"Notice My Car\">\r\n</div>\r\n</body>\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {Router} from '@angular/router';\nimport {User} from '../../shared/_models/User';\nimport {MatDialog} from '@angular/material/dialog';\nimport {NoticeService} from '../../_services/notice.service';\nimport {ResponseNotice} from '../../shared/_models/ResponseNotice';\nimport {NoticeInfoService} from '../../_services/notice.info.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userID: string;\n  token: string;\n  user: string;\n  hide: true;\n  profileUserModel = new User('', '', '', '');\n  card = new ResponseNotice('',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    [],\n    '',\n    '');\n  noticeArray: Array<ResponseNotice>;\n  searchbar: string;\n\n\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router,\n              private dialog: MatDialog,\n              private noticeService: NoticeService,\n              private noticeInfoService: NoticeInfoService) {\n    this.user = localStorage.getItem('name');\n    this.authenticationService.getUserInfo(this.profileUserModel);\n    this.token = localStorage.getItem('token');\n\n    this.authenticationService.userObservable.subscribe(\n      user => {\n        this.user = user.name;\n        console.log(user.name);\n      });\n    this.noticeService.showAllNotices().toPromise()\n      .then(res => {\n        this.noticeArray = [];\n        this.noticeArray = res['All_notices'];\n        console.log(res['All_notices']);\n      });\n  }\n\n  ngOnInit(): void {\n    document.body.removeAttribute('.modal-open');\n    if (this.searchbar) {\n\n    }\n  }\n\n  logOut(): void {\n    this.authenticationService.logOut();\n    console.log('User Log out.');\n  }\n\n  toCreateNotice(): void {\n    this.router.navigate(['create']);\n  }\n\n  toShowFullInformation(card: ResponseNotice): void {\n    this.noticeInfoService.changeNotice(card);\n    this.router.navigate(['info']);\n  }\n\n  search(): void {\n  }\n}\n","<mat-toolbar>\r\n  <span>Notice My Car</span>\r\n  <span class=\"spacer\"></span>\r\n  <span><button mat-raised-button color=\"accent\" (click)=\"toCreateNotice()\">Stwórz Ogłoszenie</button></span>\r\n  <span class=\"small-spacer\"></span>\r\n  <span><button mat-raised-button color=\"accent\" (click)=\"logOut()\">Wyloguj się</button></span>\r\n</mat-toolbar>\r\n<mat-toolbar class=\"reshaper\" fxLayoutAlign=\"space-between\" color='accent' fxLayout=\"row\">\r\n  <div fxFlex=\"20\" fxLayoutAlign=\"left center\">\r\n    <h1>Witaj {{user}}! </h1>\r\n  </div>\r\n  <div fxFlex=\"14\" fxLayout=\"right center\" class=\"padder\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Wyszukaj</mat-label>\r\n      <input matInput [(ngModel)]=\"searchbar\">\r\n      <button mat-icon-button matSuffix (click)=\"search()\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n</mat-toolbar>\r\n<body class=\"mat-app-background\" fxFill fxLayoutAlign=\"center\">\r\n<div fxLayoutGap=\"16px grid\" fxLayout=\"center wrap\" fxFlex=\"75\" class=\"card-padding\">\r\n  <div *ngFor=\"let card of noticeArray\" fxLayout=\"row\" class=\"card-padding\">\r\n    <br>\r\n<!--    *ngIf=\"card.statuses[0].name === 'aktywne'\"-->\r\n    <mat-card class=\"card-wrapper\" >\r\n      <mat-card-title>\r\n        {{card.title}}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n        Autor: {{card.notice_author}}\r\n      </mat-card-subtitle>\r\n      <mat-card-subtitle>\r\n        Email: {{card.notice_author_email}}\r\n      </mat-card-subtitle>\r\n      <mat-card-content>\r\n        <h4>Marka: {{card.mark}}</h4>\r\n        <h4>Model: {{card.model}}</h4>\r\n        <h4>Przebieg: {{card.mileage}}</h4>\r\n      </mat-card-content>\r\n      <img alt=\"zdjęcie\" mat-card-image src={{card.image_url}} class=\"imageLimiter\">\r\n      <mat-card-footer fxLayoutAlign=\"center end\" class=\"padder\">\r\n        <span><button mat-raised-button color=\"accent\" (click)=\"toShowFullInformation(card)\">Więcej</button></span>\r\n      </mat-card-footer>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n</body>\r\n<footer fxLayoutAlign=\"center\">\r\n  <p></p>\r\n  <p>Car-NoticeZMP</p>\r\n</footer>\r\n","import {ChangeDetectorRef, Component} from '@angular/core';\nimport {AuthenticationService} from './_services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ProjektTracz';\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    public authenticationService: AuthenticationService\n  ) {\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n}\n","<html class=\"mat-app-background\">\n<router-outlet>\n</router-outlet>\n</html>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {Router} from '@angular/router';\nimport {Login} from '../../shared/_models/Login';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  signInUserModel = new Login('', '');\n  hide = true;\n\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) {\n  }\n\n  openSignUp(): void {\n    this.router.navigate(['register']);\n  }\n\n  ngOnInit(): void {\n  }\n\n  signIn(): void {\n    this.authenticationService.SignIn(this.signInUserModel);\n  }\n}\n","<mat-toolbar>\n  <span>Notice My Car</span>\n  <span class=\"spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"openSignUp()\">Zarejestruj się</button></span>\n</mat-toolbar>\n\n<body class=\"mat-app-background\" fxLayoutAlign=\"center center\">\n\n<div fxLayoutAlign=\"center center\" fxLayout=\"column\">\n  <h2>Zaloguj się</h2>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Podaj adres e-mail:</mat-label>\n    <input required matInput [(ngModel)]=\"signInUserModel.email\">\n    <button matSuffix mat-icon-button disabled></button>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Podaj Hasło</mat-label>\n    <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"signInUserModel.password\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n  <div fxLayoutGap=\"2%\" fxLayout=\"column\" >\n    <button fxFill mat-raised-button (click)=\"signIn()\" type=\"submit\">Zaloguj się! </button>\n    <app-google></app-google>\n  </div>\n  </div>\n</body>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../shared/_models/User';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  token: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post<any>('https://citygame.ga/api/auth/register', user);\r\n  }\r\n\r\n  login(user): Observable<any> {\r\n    return this.http.post<any>('https://citygame.ga/api/auth/login', user);\r\n  }\r\n\r\n  getUser(): Observable<User> {\r\n    return this.http.get<User>('https://citygame.ga/api/auth/profile', {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n\r\n\r\n}\r\n","export class Notice {\r\n  title: string;\r\n  message: string;\r\n  image: any;\r\n  mark: string;\r\n  model: string;\r\n  color: string;\r\n  body: string;\r\n  mileage: string;\r\n  price: string;\r\n  year: string;\r\n\r\n  constructor(title: string, message: string, image: any, mark: string, model: string, color: string, body: string, mileage: string, price: string, year: string) {\r\n    this.title = title;\r\n    this.message = message;\r\n    this.image = image;\r\n    this.mark = mark;\r\n    this.model = model;\r\n    this.color = color;\r\n    this.body = body;\r\n    this.mileage = mileage;\r\n    this.price = price;\r\n    this.year = year;\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule, routingComponents} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material.module';\nimport {FlexModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './_services/authentication.service';\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\nimport {SignInComponent} from './components/sign-in/sign-in.component';\nimport {SignUpComponent} from './components/sign-up/sign-up.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {UserService} from './_services/user.service';\nimport {AuthGuard} from './_helpers/auth.guard';\nimport {GoogleComponent} from './components/google/google.component';\nimport {FacebookLoginProvider, GoogleLoginProvider, SocialAuthServiceConfig, SocialLoginModule} from 'angularx-social-login';\nimport {CreateNoticeComponent} from './components/create-notice/create-notice.component';\nimport {FullInformationComponent} from './components/full-information/full-information.component';\nimport {SnackBar} from './_helpers/snackbar.helper';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    SignInComponent,\n    SignUpComponent,\n    ProfileComponent,\n    GoogleComponent,\n    CreateNoticeComponent,\n    FullInformationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexModule,\n    FormsModule,\n    MatButtonModule,\n    HttpClientModule,\n    SocialLoginModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthenticationService,\n    AuthGuard,\n    UserService,\n    SnackBar,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '330533625286-5673scc40rk9b1osng7un882f14bj3o1.apps.googleusercontent.com'\n            )\n          }\n        ]\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {GoogleLoginProvider, SocialAuthService, SocialUser} from 'angularx-social-login';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {Login} from '../../shared/_models/Login';\n\n@Component({\n  selector: 'app-google',\n  templateUrl: './google.component.html',\n  styleUrls: ['./google.component.scss']\n})\n\nexport class GoogleComponent implements OnInit {\n  socialUser: SocialUser;\n  isLoggedIn: boolean;\n  loginForm: FormGroup;\n  loginUserModel = new Login('', '');\n\n  constructor(private socialAuthService: SocialAuthService,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) {\n  }\n\n  signInWithGoogle(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    this.authenticationService.QuietlySignIn(this.loginUserModel);\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.socialAuthService.authState.subscribe((user) => {\n      this.socialUser = user;\n      this.isLoggedIn = (user != null);\n      console.log(this.socialUser);\n    });\n  }\n}\n","<button fxFill mat-raised-button (click)=\"signInWithGoogle()\" type=\"button\" fxLayoutAlign=\"center center\">\n  <mat-icon _ngcontent-wvs-c85=\"\" class=\"mat-icon notranslate mat-icon-no-color ng-star-inserted\" role=\"img\"\n            aria-hidden=\"true\" data-mat-icon-type=\"svg\" data-mat-icon-name=\"auth_service_google_24dp\"\n            data-mat-icon-namespace=\"firebase\">\n    <svg height=\"100%\" viewBox=\"0 0 20 20\" width=\"100%\" fit=\"\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\n      <path\n        d=\"M19.6 10.23c0-.82-.1-1.42-.25-2.05H10v3.72h5.5c-.15.96-.74 2.31-2.04 3.22v2.45h3.16c1.89-1.73 2.98-4.3 2.98-7.34z\"\n        fill=\"#4285F4\"></path>\n      <path\n        d=\"M13.46 15.13c-.83.59-1.96 1-3.46 1-2.64 0-4.88-1.74-5.68-4.15H1.07v2.52C2.72 17.75 6.09 20 10 20c2.7 0 4.96-.89 6.62-2.42l-3.16-2.45z\"\n        fill=\"#34A853\"></path>\n      <path\n        d=\"M3.99 10c0-.69.12-1.35.32-1.97V5.51H1.07A9.973 9.973 0 000 10c0 1.61.39 3.14 1.07 4.49l3.24-2.52c-.2-.62-.32-1.28-.32-1.97z\"\n        fill=\"#FBBC05\"></path>\n      <path\n        d=\"M10 3.88c1.88 0 3.13.81 3.85 1.48l2.84-2.76C14.96.99 12.7 0 10 0 6.09 0 2.72 2.25 1.07 5.51l3.24 2.52C5.12 5.62 7.36 3.88 10 3.88z\"\n        fill=\"#EA4335\"></path>\n    </svg>\n  </mat-icon>\n  Zaloguj przez Google!\n</button>\n\n","export class Register {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  password_confirmation: string;\r\n\r\n\r\n  constructor(name, email, password, password_confirmation) {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.password_confirmation = password_confirmation;\r\n  }\r\n}\r\n","import {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SnackBar{\r\n  constructor(private snackBar: MatSnackBar){\r\n  }\r\n\r\n  open(message: string, action: string): void {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Notice} from '../shared/_models/Notice';\r\nimport {ResponseNotice} from '../shared/_models/ResponseNotice';\r\nimport {Searchable} from '../shared/_models/Searchable';\r\nimport {MailTo} from '../shared/_models/MailTo';\r\nimport {FormGroup} from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class NoticeService {\r\n\r\n  token = localStorage.getItem('token');\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  storeNotice(notice): any {\r\n    return this.http.post('https://citygame.ga/api/notices/store', notice, {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n  showAllNotices(): Observable<Array<ResponseNotice>> {\r\n    return this.http.get<Array<ResponseNotice>>('https://citygame.ga/api/notices/all', {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n  showSpecificNotice(id: string): Observable<Array<ResponseNotice>> {\r\n    return this.http.get<Array<ResponseNotice>>\r\n    ('https://citygame.ga/api/notices/show/' + id, {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n  searchNotices(search: Searchable): Observable<Array<Searchable>> {\r\n    return this.http.post<Array<Searchable>>\r\n    ('https://citygame.ga/api/notices/search', search, {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n  addToFavourite(id: string): Observable<Array<ResponseNotice>> {\r\n    return this.http.post <Array<ResponseNotice>>\r\n    ('https://citygame.ga/api/fav/' + id + '/store/', {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n\r\n  addComment(id: string, comment): any {\r\n    return this.http.post('https://citygame.ga/api/comments/' + id + '/store', comment, {headers: {Authorization: `Bearer ${this.token}`}});\r\n  }\r\n}\r\n","export class User {\r\n  name: string;\r\n  email: string;\r\n  email_verified_at: string;\r\n  avatar: string;\r\n\r\n  constructor(name: string,\r\n              email: string,\r\n              email_verified_at: string,\r\n              avatar: string) {\r\n    this.name = name;\r\n    this.email = email;\r\n    this.email_verified_at = email_verified_at;\r\n    this.avatar = avatar;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\nimport {AuthenticationService} from '../_services/authentication.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    if (this.authenticationService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\r\nimport {Login} from '../shared/_models/Login';\r\nimport {Register} from '../shared/_models/Register';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {UserService} from './user.service';\r\nimport {User} from '../shared/_models/User';\r\nimport {SnackBar} from '../_helpers/snackbar.helper';\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<Login>;\r\n  public currentUser: Observable<Login>;\r\n  user: any;\r\n  token: string;\r\n  userSource = new Subject<User>();\r\n  userObservable = this.userSource.asObservable();\r\n  userID = localStorage.getItem('userID');\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private snackBar: SnackBar,\r\n              private userService: UserService) {\r\n    this.currentUserSubject = new BehaviorSubject<Login>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  SignUp(user: Register): Subscription {\r\n    return this.userService.register(user).subscribe(\r\n      response => {\r\n        this.snackBar.open('Zarejestrowano prawidłowo', 'X');\r\n        localStorage.setItem('token', response.token);\r\n      },\r\n      error => {\r\n        this.snackBar.open('Coś poszło nie tak', 'X');\r\n        console.log('Error:', error.status, error.message);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  QuietlySignUp(user: Register): Subscription {\r\n    return this.userService.register(user).subscribe(\r\n      response => {\r\n        localStorage.setItem('token', response.token);\r\n      },\r\n      error => {\r\n        console.log('Error:', error.status, error.statusText);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  SignIn(user: Login): Subscription {\r\n    return this.userService.login(user).subscribe(\r\n      response => {\r\n        localStorage.setItem('token', response.access_token);\r\n        console.log('User signed in. ');\r\n        this.snackBar.open('Zalogowano pomyślnie', 'X');\r\n        this.router.navigate(['profile']);\r\n      },\r\n      error => {\r\n        this.snackBar.open('Nieprawidłowy login lub hasło! ', 'X');\r\n      }\r\n    );\r\n  }\r\n\r\n  QuietlySignIn(user: Login): Subscription {\r\n    return this.userService.login(user).subscribe(\r\n      response => {\r\n        localStorage.setItem('token', response.idtoken);\r\n        this.loggedIn();\r\n        this.router.navigate(['profile']);\r\n      },\r\n      error => {\r\n        this.snackBar.open('Coś poszło nie tak', 'X');\r\n        console.log('Error:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  setUser(user: User): void {\r\n    this.userSource.next(user);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getUserInfo(user: User) {\r\n    return this.userService.getUser().subscribe(\r\n      res => {\r\n        // @ts-ignore\r\n        localStorage.setItem('name', res.message.name);\r\n        // @ts-ignore\r\n        localStorage.setItem('email', res.message.email);\r\n        // @ts-ignore\r\n        localStorage.setItem('email_verified_at', res.message.email_verified_at);\r\n        // @ts-ignore\r\n        localStorage.setItem('avatar', res.message.avatar);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  logOut(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshed');\r\n    localStorage.removeItem('name');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('email_verified_at');\r\n    localStorage.removeItem('avatar');\r\n    this.router.navigate(['h']);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Register} from '../../shared/_models/Register';\nimport {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  signUpUserModel = new Register('', '', '', '');\n  hide = true;\n\n  constructor(private router: Router,\n              private authenticationService: AuthenticationService) {\n  }\n\n\n  signUp(): void {\n    this.authenticationService.SignUp(this.signUpUserModel);\n  }\n\n  openSignIn(): void {\n    this.router.navigate(['login']);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <span>Notice My Car</span>\n  <span class=\"spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"openSignIn()\">Zaloguj się</button></span>\n</mat-toolbar>\n\n<body class=\"mat-app-background\" fxLayoutAlign=\"center center\">\n\n<div fxLayoutAlign=\"center center\" fxLayout=\"column\">\n  <h2>Zarejestruj się</h2>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Podaj nazwę użytkownika</mat-label>\n    <input required matInput [(ngModel)]=\"signUpUserModel.name\">\n    <button matSuffix mat-icon-button disabled></button>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Podaj e-mail</mat-label>\n    <input required matInput [(ngModel)]=\"signUpUserModel.email\">\n    <button matSuffix mat-icon-button disabled></button>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Podaj hasło</mat-label>\n    <input required matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"signUpUserModel.password\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Potwierdź hasło</mat-label>\n    <input required matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"signUpUserModel.password_confirmation\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\">\n      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n\n\n  <div fxLayoutGap=\"20%\" fxLayout=\"column\">\n    <button fxFill mat-raised-button (click)=\"signUp()\" type=\"submit\">Zarejestruj się!</button>\n  </div>\n</div>\n</body>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ResponseNotice} from '../../shared/_models/ResponseNotice';\nimport {NoticeService} from '../../_services/notice.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {NoticeInfoService} from '../../_services/notice.info.service';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {SnackBar} from '../../_helpers/snackbar.helper';\nimport {User} from '../../shared/_models/User';\n\n@Component({\n  selector: 'app-full-information',\n  templateUrl: './full-information.component.html',\n  styleUrls: ['./full-information.component.scss']\n})\nexport class FullInformationComponent implements OnInit, OnDestroy {\n  card = new ResponseNotice('',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    [],\n    '',\n    '');\n  user = new User('', '', '', '');\n  content: string;\n  noticeArray: Array<ResponseNotice>;\n  noticeSubscription: Subscription;\n\n  constructor(private noticeService: NoticeService,\n              private dialog: MatDialog,\n              private noticeInfoService: NoticeInfoService,\n              private authenticationService: AuthenticationService,\n              private router: Router,\n              private snackbar: SnackBar) {\n    this.noticeSubscription = this.noticeInfoService.currentNotice.subscribe(response => {\n      this.card = response;\n\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  logOut(): void {\n    this.authenticationService.logOut();\n  }\n\n  toCreateNotice(): void {\n    this.router.navigate(['create']);\n  }\n\n  ngOnDestroy(): void {\n    this.noticeSubscription.unsubscribe();\n  }\n\n  sendComment(): void {\n    this.noticeService.addComment(this.card.id, this.content);\n    this.snackbar.open('Wiadomość wysłana pomyślnie!', 'X');\n  }\n\n  toNotices(): void {\n    this.router.navigate(['profile']);\n  }\n\n\n}\n","<mat-toolbar>\n  <span>Notice My Car</span>\n  <span class=\"spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"toCreateNotice()\">Stwórz Ogłoszenie</button></span>\n  <span class=\"small-spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"toNotices()\">Wszystkie</button></span>\n  <span class=\"small-spacer\"></span>\n  <span><button mat-raised-button color=\"accent\" (click)=\"logOut()\">Wyloguj się</button></span>\n</mat-toolbar>\n<body class=\"mat-app-background\" fxFill fxLayoutAlign=\"center\">\n\n<div fxLayout=\"column\" fxFlex=\"70\" fxLayoutGap=\"30px\" >\n  <div fxLayoutAlign=\"center\">\n    <img alt=\"zdjęcie\" class=\"imageLimiter\" src={{card.image_url}}>\n  </div>\n  <div fxLayoutAlign=\"center\"><h1>{{card.title}}</h1></div>\n  <div fxLayout=\"row\" fxFlex=\"50\" fxLayoutGap=\"30vw\">\n    <div fxLayout=\"column\">\n      <h4>Ogłoszenie wystawił: {{card.notice_author}}</h4>\n      <h4>Kontakt email: {{card.notice_author_email}}</h4>\n      <img alt=\"zdjęcie\" class=\"avatarLimiter\" src={{card.author_avatar}}>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"16px\">\n      <h4>Rok produkcji: {{card.year}}</h4>\n      <h4>Przebieg: {{card.mileage}} km</h4>\n      <h4>Kategoria: {{card.body}}</h4>\n      <h4>Marka: {{card.mark}}</h4>\n      <h4>Model: {{card.model}}</h4>\n      <h4>Cena: {{card.price}} zł</h4>\n    </div>\n  </div>\n</div>\n\n</body>\n\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {SignInComponent} from './components/sign-in/sign-in.component';\r\nimport {SignUpComponent} from './components/sign-up/sign-up.component';\r\nimport {ProfileComponent} from './components/profile/profile.component';\r\nimport {AuthGuard} from './_helpers/auth.guard';\r\nimport {CreateNoticeComponent} from './components/create-notice/create-notice.component';\r\nimport {FullInformationComponent} from './components/full-information/full-information.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'h', pathMatch: 'full'},\r\n  {path: 'h', component: HomeComponent},\r\n  {path: 'login', component: SignInComponent},\r\n  {path: 'register', component: SignUpComponent},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n  {path: 'create', component: CreateNoticeComponent, canActivate: [AuthGuard]},\r\n  {path: 'info', component: FullInformationComponent, canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n\r\nexport const routingComponents = [\r\n  HomeComponent,\r\n];\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    MatExpansionModule,\r\n    MatMenuModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import {Status} from './Status';\r\n\r\nexport class ResponseNotice {\r\n  title: string;\r\n  author_avatar: any;\r\n  body: string;\r\n  image_url: any;\r\n  mark: string;\r\n  message: string;\r\n  mileage: string;\r\n  model: string;\r\n  notice_author: string;\r\n  notice_author_email: string;\r\n  price: string;\r\n  statuses: Array<Status>;\r\n  year: string;\r\n  id: string;\r\n\r\n  constructor(title: string,\r\n              author_avatar: any,\r\n              body: string,\r\n              image_url: any,\r\n              mark: string,\r\n              message: string,\r\n              mileage: string,\r\n              model: string,\r\n              notice_author: string,\r\n              notice_author_email: string,\r\n              price: string,\r\n              statuses: Array<Status>,\r\n              year: string,\r\n              id: string) {\r\n    this.title = title;\r\n    this.author_avatar = author_avatar;\r\n    this.body = body;\r\n    this.image_url = image_url;\r\n    this.mark = mark;\r\n    this.message = message;\r\n    this.mileage = mileage;\r\n    this.model = model;\r\n    this.notice_author = notice_author;\r\n    this.notice_author_email = notice_author_email;\r\n    this.price = price;\r\n    this.statuses = statuses;\r\n    this.year = year;\r\n    this.id = id;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}